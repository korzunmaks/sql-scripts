USE RIASSE

SET NOCOUNT ON

WITH
	ДокументыРозничнойВыручки (РасходнаяНакладнаяIDDOC, ПриходнаяНакладнаяIDDOC, КассоваяСменаIDDOC)
	AS
	(
		SELECT DISTINCT
			CASE LEFT(Бух_ДокументСтроки_РозничнаяВыручка.ДокID13, 4)
		WHEN '  BE' THEN RIGHT(Бух_ДокументСтроки_РозничнаяВыручка.ДокID13, 9)
		WHEN '  C2' THEN NULL
	END AS РасходнаяНакладнаяIDDOC,
			CASE LEFT(Бух_ДокументСтроки_РозничнаяВыручка.ДокID13, 4)
		WHEN '  BE' THEN NULL
		WHEN '  C2' THEN RIGHT(Бух_ДокументСтроки_РозничнаяВыручка.ДокID13, 9)
	END AS ПриходнаяНакладнаяIDDOC,
			Бух_ДокументСтроки_РозничнаяВыручка.ДокОтчетКассовойСменыID AS КассоваяСменаIDDOC
		FROM
			dbo.Бух_Документ_РозничнаяВыручка AS Бух_Документ_РозничнаяВыручка
			LEFT JOIN dbo.Бух_ДокументСтроки_РозничнаяВыручка AS Бух_ДокументСтроки_РозничнаяВыручка with (forceseek)
			ON Бух_Документ_РозничнаяВыручка.iddoc = Бух_ДокументСтроки_РозничнаяВыручка.iddoc
		WHERE
	--Бух_Документ_РозничнаяВыручка.idd = '10015480868094025'
	--Бух_Документ_РозничнаяВыручка.iddoc = @iddoc
	Бух_Документ_РозничнаяВыручка.date_time_iddoc >= '20190401'
			AND Бух_Документ_РозничнаяВыручка.date_time_iddoc <= '20190630z'
			AND Бух_Документ_РозничнаяВыручка.closed &1=1
			AND Бух_Документ_РозничнаяВыручка.ФирмаIDD IN ('10015480660352695')
	)
SELECT
	ДанныеРозничныхПродажВозвратов.ВидОперации
	, CAST(LEFT(ДанныеРозничныхПродажВозвратов.ДатаДок, 8) AS datetime) Дата
	, ДанныеРозничныхПродажВозвратов.НомерДок
	, Справочник_МестаХранения.Наименование AS Склад
	, Справочник_Контрагенты.Наименование AS Контрагент
	, Справочник_ККМ.Наименование AS ККМ
	, ДанныеРозничныхПродажВозвратов.ТоварIDD
	, Справочник_Номенклатура.Наименование
	, Справочник_Номенклатура.Код AS КодТовара
	, Справочник_Номенклатура.СтавкаНДС_Идентификатор
	, SUM(ДанныеРозничныхПродажВозвратов.Количество) AS Количество
	, SUM(ДанныеРозничныхПродажВозвратов.НДС) AS НДС 
	, SUM(ДанныеРозничныхПродажВозвратов.Сумма) AS Сумма
--, SUM(CASE 
--		WHEN Справочник_Номенклатура.СтавкаНДС_Идентификатор = 'безНДС'
--			OR Справочник_Номенклатура.СтавкаНДС_Идентификатор = ''
--			THEN 0
--		WHEN Справочник_Номенклатура.СтавкаНДС_Идентификатор = 'ЛьготнаяСтавкаНДС'
--			THEN cast(round(ДанныеРозничныхПродажВозвратов.Сумма * 10/(100+10), 3) as numeric(25,3))
--		WHEN Справочник_Номенклатура.СтавкаНДС_Идентификатор = 'НДС18'
--			THEN cast(round(ДанныеРозничныхПродажВозвратов.Сумма * 18/(100+18), 3) as numeric(25,3))
--		WHEN Справочник_Номенклатура.СтавкаНДС_Идентификатор = 'ОсновнаяСтавкаНДС'
--			THEN cast(round(ДанныеРозничныхПродажВозвратов.Сумма * 20/(100+20), 3) as numeric(25,3))
--		ELSE 0
--	END) AS НДСРасчетный 
FROM
	(			SELECT
			'РасходнаяНакладная' AS ВидОперации,
			max(Бух_Документ_РасходнаяНакладная.date_time_iddoc) AS ДатаДок,
			Бух_Документ_РасходнаяНакладная.НомерДок AS НомерДок,
			Бух_Документ_РасходнаяНакладная.СкладID AS СкладID,
			Бух_Документ_РасходнаяНакладная.КлиентID AS КлиентID,
			''  AS ККМID,
			Бух_ДокументСтроки_РасходнаяНакладная.ТоварIDD AS ТоварIDD,
			SUM(Бух_ДокументСтроки_РасходнаяНакладная.Количество) AS Количество,
			SUM(Бух_ДокументСтроки_РасходнаяНакладная.Сумма) AS Сумма,
			SUM(Бух_ДокументСтроки_РасходнаяНакладная.НДС) AS НДС
		FROM
			ДокументыРозничнойВыручки AS ПродажиИнтернетМагазина
			INNER JOIN dbo.Бух_ДокументСтроки_РасходнаяНакладная AS Бух_ДокументСтроки_РасходнаяНакладная with (forceseek)
			ON ПродажиИнтернетМагазина.РасходнаяНакладнаяIDDOC = Бух_ДокументСтроки_РасходнаяНакладная.iddoc
			LEFT JOIN dbo.Бух_Документ_РасходнаяНакладная AS Бух_Документ_РасходнаяНакладная
			ON ПродажиИнтернетМагазина.РасходнаяНакладнаяIDDOC = Бух_Документ_РасходнаяНакладная.iddoc
		GROUP BY
		СкладID,
		КлиентID,
		НомерДок, 
		ТоварIDD
		HAVING
		SUM(Бух_ДокументСтроки_РасходнаяНакладная.Количество) <> 0
			AND SUM(Бух_ДокументСтроки_РасходнаяНакладная.Сумма) <> 0

	UNION

		SELECT
			'ПриходнаяНакладная' AS ВидОперации,
			Бух_ДокументСтроки_ПриходнаяНакладная.ТоварIDD AS ТоварIDD,
			max(Бух_Документ_ПриходнаяНакладная.date_time_iddoc) AS ДатаДок,
			Бух_Документ_ПриходнаяНакладная.НомерДок AS НомерДок,
			Бух_Документ_ПриходнаяНакладная.СкладID AS СкладID,
			Бух_Документ_ПриходнаяНакладная.КлиентID AS КлиентID,
			''  AS ККМID,
			SUM(Бух_ДокументСтроки_ПриходнаяНакладная.Количество) AS Количество,
			SUM(Бух_ДокументСтроки_ПриходнаяНакладная.Сумма) AS Сумма,
			SUM(Бух_ДокументСтроки_ПриходнаяНакладная.НДС) AS НДС
		FROM
			ДокументыРозничнойВыручки AS ВозвратИнтернетМагазина
			INNER JOIN dbo.Бух_ДокументСтроки_ПриходнаяНакладная AS Бух_ДокументСтроки_ПриходнаяНакладная with (forceseek)
			ON ВозвратИнтернетМагазина.ПриходнаяНакладнаяIDDOC = Бух_ДокументСтроки_ПриходнаяНакладная.iddoc
			LEFT JOIN dbo.Бух_Документ_ПриходнаяНакладная AS Бух_Документ_ПриходнаяНакладная
			ON ВозвратИнтернетМагазина.ПриходнаяНакладнаяIDDOC = Бух_Документ_ПриходнаяНакладная.iddoc
		GROUP BY
		СкладID,
		КлиентID,
		НомерДок, 
		ТоварIDD
		HAVING
		SUM(-Бух_ДокументСтроки_ПриходнаяНакладная.Количество) <> 0
			AND SUM(-Бух_ДокументСтроки_ПриходнаяНакладная.Сумма) <> 0

	UNION

		SELECT
			'ОтчетКассовойСмены' AS ВидОперации,
			max(Бух_Документ_ОтчетКассовойСмены.date_time_iddoc) AS ДатаДок,
			Бух_Документ_ОтчетКассовойСмены.НомерДок AS НомерДок,
			Бух_Документ_ОтчетКассовойСмены.СкладID AS СкладID,
			Бух_Документ_ОтчетКассовойСмены.КлиентID AS КлиентID,
			Бух_Документ_ОтчетКассовойСмены.ККМID AS ККМID,
			Бух_ДокументСтроки_ОтчетКассовойСмены.ТоварIDD AS ТоварIDD,
			SUM(Бух_ДокументСтроки_ОтчетКассовойСмены.Количество) AS Количество,
			SUM(Бух_ДокументСтроки_ОтчетКассовойСмены.Сумма) AS Сумма,
			SUM(Бух_ДокументСтроки_ОтчетКассовойСмены.НДС) AS НДС
		FROM
			ДокументыРозничнойВыручки AS ОтчетыКассовойСмены
			INNER JOIN dbo.Бух_ДокументСтроки_ОтчетКассовойСмены AS Бух_ДокументСтроки_ОтчетКассовойСмены with (forceseek)
			ON ОтчетыКассовойСмены.КассоваяСменаIDDOC = Бух_ДокументСтроки_ОтчетКассовойСмены.iddoc
			LEFT JOIN dbo.Бух_Документ_ОтчетКассовойСмены AS Бух_Документ_ОтчетКассовойСмены
			ON ОтчетыКассовойСмены.КассоваяСменаIDDOC = Бух_Документ_ОтчетКассовойСмены.iddoc
		WHERE
		--//Убираем Подарочный сертификат Эльсити...
		--//Убираем Выгодные рубли 10015480528380124
		--//Убираем Пополнение карты Копилки 10015480549121976
		Бух_ДокументСтроки_ОтчетКассовойСмены.ТоварIDD NOT IN ('10015480549121976', '10015480528380124', '10015480526183791', '10015480554470865', '10015480563099824', '10015480585690950', '10015480563099821', '10015480526183882', '10015480526183880')
			AND Бух_ДокументСтроки_ОтчетКассовойСмены.СтатусЧека_Идентификатор IN ('Продажа', 'ОтмененнаяПродажа', 'Возврат')
		GROUP BY
		СкладID,
		КлиентID, 
		НомерДок,
		ККМID, 
		ТоварIDD
		HAVING
		SUM(Бух_ДокументСтроки_ОтчетКассовойСмены.Количество) <> 0
			AND SUM(Бух_ДокументСтроки_ОтчетКассовойСмены.Сумма) <> 0
	) ДанныеРозничныхПродажВозвратов
	LEFT JOIN dbo.Бух_Справочник_Номенклатура AS Справочник_Номенклатура
	ON	ДанныеРозничныхПродажВозвратов.ТоварIDD = Справочник_Номенклатура.IDD
	LEFT JOIN Бух_Справочник_МестаХранения AS Справочник_МестаХранения with (forceseek)
	ON ДанныеРозничныхПродажВозвратов.СкладID = Справочник_МестаХранения.ID
	LEFT JOIN Бух_Справочник_Контрагенты AS Справочник_Контрагенты with (forceseek)
	ON ДанныеРозничныхПродажВозвратов.КлиентID = Справочник_Контрагенты.ID
	LEFT JOIN Бух_Справочник_ККМ AS Справочник_ККМ with (forceseek)
	ON ДанныеРозничныхПродажВозвратов.ККМID = Справочник_ККМ.ID
WHERE
	ДанныеРозничныхПродажВозвратов.НДС = 0
	-- Выкинем товары: очки, 
	AND ДанныеРозничныхПродажВозвратов.ТоварIDD NOT IN ('10015480857879726', '10015480857879715', '10015480831771869', '10015480857879708',
														 '10015480831771875', '10015480831771872', '10015480831771863', '10015480857879723',
														 '10015480831771863', '10015480857879719', '10015480831771866', '10015480857879712',
														 '10015480831771878')

GROUP BY
	ДанныеРозничныхПродажВозвратов.ВидОперации
	, CAST(LEFT(ДанныеРозничныхПродажВозвратов.ДатаДок, 8) AS datetime)
	, ДанныеРозничныхПродажВозвратов.НомерДок
	, Справочник_МестаХранения.Наименование
	, Справочник_Контрагенты.Наименование
	, Справочник_ККМ.Наименование
	, ДанныеРозничныхПродажВозвратов.ТоварIDD
	, Справочник_Номенклатура.Наименование
	, Справочник_Номенклатура.Код
	, Справочник_Номенклатура.СтавкаНДС_Идентификатор

ORDER BY
	Склад
	, ВидОперации
	, ККМ
	, Дата
			 